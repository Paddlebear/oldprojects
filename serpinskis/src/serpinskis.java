
import java.awt.Color;
import java.awt.Graphics;
import java.util.Random;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author VELGA&KARLO
 */
public class serpinskis extends javax.swing.JFrame {

    /**
     * Creates new form serpinskis
     */
    public serpinskis() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        skaits = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        poga = new javax.swing.JButton();
        panelis = new javax.swing.JPanel();
        cleaning = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        skaits.setText("50000");

        jLabel1.setText("Punktu skaits");

        poga.setText("Zīmēt");
        poga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pogaActionPerformed(evt);
            }
        });

        panelis.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout panelisLayout = new javax.swing.GroupLayout(panelis);
        panelis.setLayout(panelisLayout);
        panelisLayout.setHorizontalGroup(
            panelisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        panelisLayout.setVerticalGroup(
            panelisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        cleaning.setText("Notīrīt");
        cleaning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleaningActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(skaits)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(poga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cleaning, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(skaits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poga))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cleaning))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //double[][] punkti = {{0.0, 0.0, 0.0, 0.16, 0.0, 0.0},{0.85, 0.04, -0.04, 0.85, 0.0, 1.6},{0.2, -0.26, 0.23, 0.22, 0.0, 1.6},{-0.15, 0.28, 0.26, 0.24, 0.0, 0.44}};
    double[][] punkti = new double[1][2];
    //double[][] reiz = {{0.5, 0.0},{0.0, 0.5}};
    double[][] reiz1 = {{0.0, 0.0},{0.0, 0.16}};
    double[][] reiz2 = {{0.85, 0.04},{-0.04, 0.85}};
    double[][] reiz3 = {{0.2, -0.26},{0.23, 0.22}};
    double[][] reiz4 = {{-0.15, 0.28},{0.26, 0.24}};
    double[][] p1 = {{0.0, 0.0}};
    double[][] p2 = {{0.0, 1.6}};
    double[][] p3 = {{0.0, 1.6}};
    double[][] p4 = {{0.0, 0.44}};
    double x = 0, y = 0;
    public void reizina(double[][] r) {
        double[][] rez = new double[1][2];
        for (int a = 0; a < punkti.length; a++) {
            for (int b = 0; b < r[0].length; b++) {
                rez[a][b] = 0;
                for (int c = 0; c < punkti[0].length; c++) {
                    rez[a][b] = rez[a][b] + punkti[a][c]*r[b][c];
                }
            }
        }
        punkti = rez;
    }
    public void pieskaita (double[][] p) {
        for (int i = 0; i < punkti.length; i++){
            for (int j = 0; j < punkti[0].length; j++) {
                punkti[i][j] = punkti[i][j] + p[i][j];
            }
        }
    }
    public void zimet(int n){
        Graphics g = panelis.getGraphics();
        Random rand = new Random();
        //Color krasa = Color.decode("#8C064D");
        g.setColor(Color.green);
        for (int i = 0; i < n; i++) {
            g.drawRect((panelis.getWidth()/2)+(int)(-40*punkti[0][0]), (panelis.getHeight()*4/5)+(int)(-40*punkti[0][1]), 0, 0);
            int p = rand.nextInt(100);
            if (p <= 1) {
                reizina(reiz1);
                pieskaita(p1);
            } else if (p <= 86 && p > 1) {
                reizina(reiz2);
                pieskaita(p2);
            } else if (p <= 93 && p > 86) {
                reizina(reiz3);
                pieskaita(p3);
            } else if (p <= 100 && p > 93){
                reizina(reiz4);
                pieskaita(p4);
            }
        }
    }
    private void pogaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pogaActionPerformed
        int n = Integer.parseInt(skaits.getText());
        //System.out.println(n);
        zimet(n);
    }//GEN-LAST:event_pogaActionPerformed

    private void cleaningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleaningActionPerformed
        //Graphics g = panelis.getGraphics();
        panelis.removeAll();
        panelis.updateUI();
    }//GEN-LAST:event_cleaningActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(serpinskis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(serpinskis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(serpinskis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(serpinskis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new serpinskis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cleaning;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panelis;
    private javax.swing.JButton poga;
    private javax.swing.JTextField skaits;
    // End of variables declaration//GEN-END:variables
}
