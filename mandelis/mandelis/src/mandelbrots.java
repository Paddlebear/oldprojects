
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.MemoryImageSource;
import java.util.Stack;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author agrike5
 */
public class mandelbrots extends javax.swing.JFrame {

    /**
     * Creates new form mandelbrots
     */
    public mandelbrots() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ano = new javax.swing.JTextField();
        alidz = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        bno = new javax.swing.JTextField();
        blidz = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        poga = new javax.swing.JButton();
        panelis = new javax.swing.JPanel();
        zooms = new javax.swing.JButton();
        normals = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("no");

        jLabel2.setText("līdz");

        ano.setText("-2");
        ano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anoActionPerformed(evt);
            }
        });

        alidz.setText("2");
        alidz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alidzActionPerformed(evt);
            }
        });

        jLabel3.setText("a");

        bno.setText("-2");
        bno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnoActionPerformed(evt);
            }
        });

        blidz.setText("2");

        jLabel5.setText("b");

        poga.setText("Mandelbrots");
        poga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pogaActionPerformed(evt);
            }
        });

        panelis.setPreferredSize(new java.awt.Dimension(400, 400));
        panelis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelisMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panelisMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panelisLayout = new javax.swing.GroupLayout(panelis);
        panelis.setLayout(panelisLayout);
        panelisLayout.setHorizontalGroup(
            panelisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        panelisLayout.setVerticalGroup(
            panelisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        zooms.setText("Zoom Out");
        zooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomsActionPerformed(evt);
            }
        });

        normals.setText("Uz normālu");
        normals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(alidz, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ano, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(bno, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                        .addComponent(blidz))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(panelis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(poga, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(zooms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(normals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poga))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(alidz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blidz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zooms))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(normals)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void alidzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alidzActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alidzActionPerformed
    Stack<Double> steks = new Stack();
    private void bnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bnoActionPerformed
    Image img;
    private void zimet(double a_no, double b_no, double a_lidz, double b_lidz) {
        double aintervals, bintervals, intervals, temp = 0;
        if (a_lidz < a_no) {
            temp = a_no;
            a_no = a_lidz;
            a_lidz = temp;
        }
        aintervals = a_lidz - a_no;
        if (b_lidz < b_no) {
            temp = b_no;
            b_no = b_lidz;
            b_lidz = temp;
        } 
        bintervals = b_lidz - b_no;
        if (Math.abs(aintervals) < Math.abs(bintervals)) {
            intervals = aintervals;
        } else intervals = bintervals;
        //System.out.println(intervals);
        int ipixels = 0;
        int[] pixels = new int[length*length];
        for (int y = 0; y < length; y++){
            for (int x = 0; x < length; x++) {
                double creal = a_no + (intervals*x/(double)length);
                double cimag = b_no + (intervals*y/(double)length);
                double b = cimag;
                double a = creal;
                int i = 0;
                do {
                    double anew = (a*a) - (b*b) +creal;
                    double bnew = (2*a*b) + cimag;
                    a = anew;
                    b = bnew;
                    i++;
                } while (i < 100 && Math.abs(a*a+b*b)<10);
                
                if (i <= 100 && Math.abs(a*a+b*b)<=10){
                    pixels[ipixels++]=(255<<24)|(0<<16)|(0<<8)|0;
                }
                else {
                int red = i*15%256;
                int blue = i*7%256;
                pixels[ipixels++]=(255<<24)|(red<<16)|(0<<8)|blue;
                }
            }
        }
        img = createImage(new MemoryImageSource(length, length, pixels, 0, length));
        Graphics g = panelis.getGraphics();
        g.drawImage(img, 0, 0, null);
    }
    private void pogaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pogaActionPerformed
        a_no = Double.parseDouble(ano.getText());
        //System.out.println(a_no);
        b_no = Double.parseDouble(bno.getText()); //int n = Integer.parseInt(ievade.getText());
        a_lidz = Double.parseDouble(alidz.getText());
        b_lidz = Double.parseDouble(blidz.getText());
        if (panelis.getWidth() < panelis.getHeight()) {
            length = panelis.getWidth();
        } else length = panelis.getHeight();
        zimet(a_no, b_no, a_lidz, b_lidz);
    }//GEN-LAST:event_pogaActionPerformed
 double jano, jbno, jalidz, jblidz;
 double a_no, b_no, a_lidz, b_lidz;
 int length;
 double aintervals, bintervals;
    private void panelisMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelisMousePressed
        int x = evt.getX();
        int y = evt.getY();
        a_no = Double.parseDouble(ano.getText());
        b_no = Double.parseDouble(bno.getText()); //int n = Integer.parseInt(ievade.getText());
        a_lidz = Double.parseDouble(alidz.getText());
        b_lidz = Double.parseDouble(blidz.getText());
        aintervals = a_lidz - a_no;
        bintervals =  b_lidz - b_no;
        jano = a_no + (aintervals*x/(double)length);
        jbno = b_no + (bintervals*y/(double)length);
        //System.out.println(jano);
        //System.out.println(jbno);
    }//GEN-LAST:event_panelisMousePressed

    private void panelisMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelisMouseReleased
        int x = evt.getX();
        int y = evt.getY();
        jalidz = a_no + (aintervals*x/(double)length);
        jblidz = b_no + (bintervals*y/(double)length);
        //System.out.println(jalidz);
        //System.out.println(jblidz);
        zimet(jano, jbno, jalidz, jblidz);
        ano.setText(String.valueOf(jano));
        bno.setText(String.valueOf(jbno));
        alidz.setText(String.valueOf(jalidz));
        blidz.setText(String.valueOf(jblidz));
        steks.push(a_no);
        steks.push(b_no);
        steks.push(a_lidz);
        steks.push(b_lidz);
        //System.out.println(b_lidz);
    }//GEN-LAST:event_panelisMouseReleased

    private void anoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anoActionPerformed

    private void normalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalsActionPerformed
        ano.setText("-2");
        bno.setText("-2");
        alidz.setText("2");
        blidz.setText("2");
        a_no = Double.parseDouble(ano.getText());
        b_no = Double.parseDouble(bno.getText()); //int n = Integer.parseInt(ievade.getText());
        a_lidz = Double.parseDouble(alidz.getText());
        b_lidz = Double.parseDouble(blidz.getText());
        zimet(-2, -2, 2, 2);
    }//GEN-LAST:event_normalsActionPerformed

    private void zoomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomsActionPerformed
        if (steks.isEmpty() == false) {
            jblidz = steks.pop();
            //System.out.println(jblidz);   
            jalidz = steks.pop();
            jbno = steks.pop();
            jano = steks.pop();
            ano.setText(String.valueOf(jano));
            bno.setText(String.valueOf(jbno));
            alidz.setText(String.valueOf(jalidz));
            blidz.setText(String.valueOf(jblidz));
            zimet(jano, jbno, jalidz, jblidz);
        }
    }//GEN-LAST:event_zoomsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mandelbrots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mandelbrots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mandelbrots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mandelbrots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mandelbrots().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alidz;
    private javax.swing.JTextField ano;
    private javax.swing.JTextField blidz;
    private javax.swing.JTextField bno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton normals;
    private javax.swing.JPanel panelis;
    private javax.swing.JButton poga;
    private javax.swing.JButton zooms;
    // End of variables declaration//GEN-END:variables
}
